import magic
import hashlib
import requests
import json
import sys
import pefile

def jprint(obj):
	"""Organizes python string to a readable JSON format"""
	text = json.dumps(obj,sort_keys=True,indent=4)
	print(text)

def file_type(sample):
	"""Returns the file type of the sample"""
	m = magic.open(magic.MAGIC_NONE)
	m.load()
	file = m.file(sample)

	return file

def hash_sum(sample):
	"""Calculates and returns a dictionary of hash values with keys md5sum, sha256sum and sha1sum of sample."""
	hashes = {}
	
	fileContent = open(sample,"rb").read()

	md5sum = hashlib.md5(fileContent).hexdigest()
	sha256sum = hashlib.sha256(fileContent).hexdigest()
	sha1sum = hashlib.sha1(fileContent).hexdigest()

	hashes['md5sum'] = md5sum
	hashes['sha256sum'] = sha256sum
	hashes['sha1sum'] = sha1sum

	return hashes

def virustTotal_Scan_Output(hash_value):
	"""Queries Virus Total API and returns JSON format of scan results for various AV engines results"""
	vtUrl = "https://www.virustotal.com/api/v3/files/" + hash_value
#	apiKey = <Your Virus Total API key here>
#	
	headers = {'x-apikey':apiKey}

	r = requests.get(vtUrl, headers=headers)
	status = r.status_code

	if status == 200:
		scanResults = r.json()['data']['attributes']['last_analysis_results']
	else:
		print(f"Error:\n")
		for key, value in r.json()['error'].items():
			print(f'\t{key} : {value}')

	return scanResults

def executableImport(sample):
	"""Returns a dictionary of dll imports in the following format:
			dll:[api call 1, api call 2, ... , api call n]"""

	file = pefile.PE(sample)

	imports = {}

	if hasattr(file, 'DIRECTORY_ENTRY_IMPORT'):
		for entry in file.DIRECTORY_ENTRY_IMPORT:
			imports[entry.dll] = []
			for imps in entry.imports:
				imports[entry.dll].append(imps.name)
	else:
		print("File has no imports")

	return imports

